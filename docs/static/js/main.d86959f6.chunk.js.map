{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","loadinf","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OAEE,sBAAMC,SAda,SAACC,GACpBA,EAAEC,iBAIEJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAvBoB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,a,+BCTZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAQF,GAFN,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAahBM,GAbgB,4CAAH,sDCCTO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAElC,OACE,sBAAKc,UAAU,yCAAf,UACA,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHKO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACdd,mBAAU,CACpCqB,KAAM,GACNa,SAAS,IAH+B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAW,WAETxB,EAAQC,GACPwB,MAAK,SAAAC,GAEFH,EAAS,CACPf,KAAMkB,EACNC,SAAS,SAId,CAAC1B,IAEGqB,EDhB0BM,CAAa3B,GAAhCa,EAHuB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAGrB,OACE,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEjB,qBAAKA,UAAW,YAAhB,SAEMH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEdPiB,EAAe,WAAO,IAAD,EAGE1C,mBAAS,CAAC,cAHZ,mBAGzB2C,EAHyB,KAGd5C,EAHc,KAOhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGF,6BAEI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MChBjB8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.d86959f6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { isUrlRequest } from 'loader-utils';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    \r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log('Submit hecho')\r\n    \r\n\r\n    if( inputValue.trim().length>2 ) {\r\n      setCategories(cats => [ inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    \r\n    <form onSubmit= {handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n    \r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n  export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=QKwI9eIYHo3gONOiSngSprxEmeM2iBJg`\r\n    const resp = await fetch ( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n      return {\r\n        id: img.id,\r\n        title : img.title,\r\n        url: img.images?.downsized_medium.url\r\n      }\r\n    })\r\n\r\n  return gifs;\r\n\r\n\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\" >\r\n    <img src={url} alt={title}/>\r\n    <p>{title}</p>   \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n  const { data: images,loading } = useFetchGifs(category);\r\n\r\n\r\n  return (\r\n    <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n    <div className= \"card-grid\">\r\n        {\r\n          images.map(img => (\r\n          <GifGridItem \r\n          key={ img.id }\r\n          {...img} \r\n          />\r\n        ))\r\n        }        \r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState( {\r\n  data: [],\r\n  loading: true\r\n  })\r\n\r\n  useEffect( () => {\r\n\r\n    getGifs(category)\r\n    .then(imgs => {\r\n\r\n        setstate({\r\n          data: imgs,\r\n          loadinf: false\r\n        });\r\n    })\r\n\r\n  }, [category] )\r\n\r\n  return state; // {data [], loading:true };\r\n}\r\n","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n  const [categories,setCategories]= useState(['One Punch'])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr/>\r\n\r\n\r\n    <ol>\r\n      { \r\n        categories.map(category =>(\r\n          <GifGrid\r\n          key = {category} \r\n          category ={ category } />\r\n        ))\r\n      }\r\n    </ol>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}